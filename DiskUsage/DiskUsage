#!/bin/bash
#
#     Script to create Disk Usage Report
#     Bob Brandt <projects@brandt.ie>
#  
VERSION=0.1
excludeDir="*~snapshot*"
depth=3

usage() {
        [ "$2" == "" ] || echo -e "$2"
        echo -e "Usage: $0 Directory [options]"
        echo -e "Options:"
        echo -e " -d, --depth    Maximum depth to search for directories (Default: $depth)"
        echo -e " -h, --help     display this help and exit"
        echo -e " -v, --version  output version information and exit"
        exit ${1:-0}
}

version() {
        echo -e "$0 $VERSION"
        echo -e "Copyright (C) 2011 Free Software Foundation, Inc."
        echo -e "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
        echo -e "This is free software: you are free to change and redistribute it."
        echo -e "There is NO WARRANTY, to the extent permitted by law.\n"
        echo -e "Written by Bob Brandt <projects@brandt.ie>."
        exit 0
}

getdu() {
	scanPath="$1"
	printPath="$2"
	printPath2="${printPath//\//}"
	declare -i pathLength=$(( ${#printPath} - ${#printPath2} ))
	
	if datestr=$( stat -c %Y "$scanPath" ) && datestr=$( date -d "@$datestr" +"%Y-%m-%d %H:%M" ) && dustr=$( du -s "$scanPath" | cut -f 1 )
	then
		echo "\"$dustr\",\"$datestr\",\"$pathLength\",\"$printPath\""
	fi
}


scanDir() {
	fullpath=$( realpath "$1" )

	echo "Scanning Directory ($fullpath):" >&2
	IFS=$'\n'       # make newlines the only separator
	for dir in $( find "$fullpath" -maxdepth $depth -path "$excludeDir" -iname "$excludeDir" -prune -o -type d -print )
	do
		relativepath=${dir/$fullpath/}
		relativepath="./"${relativepath/\//}

		getdu "$dir" "$relativepath" &
	done

	# Wait for all subprocesses to exit
	while true
	do
  		wait -n || { 
  			code="$?"
    		([[ $code = "127" ]] && exit 0 || return "$code")
    		break
			}
	done;
}

# Execute getopt
ARGS=$(getopt -o d:vh -l "depth:,help,version" -n "$0" -- "$@") || usage 1 " "

#Bad arguments
#[ $? -ne 0 ] && usage 1 "$0: No arguments supplied!\n"

eval set -- "$ARGS";

while /bin/true ; do
	case "$1" in
        -d | --depth )        depth="$2" ; shift ;;
        -h | --help )         usage 0 ;;
        -v | --version )      version ;;
        -- )                  shift ; break ;;
        * )                   usage 1 "$0: Invalid argument!\n" ;;
        esac
        shift
done

test "$#" == "0" && usage 1 "You must supply at least one directory!\n"

for dir in "$@"
do
	test -d "$dir" || usage 1 "All arguments must be Directories! ($dir)\n"
done

for dir in "$@"
do
	scanDir "$dir"
	echo -e "\n"
done

exit $?
